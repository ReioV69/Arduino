[
    {
    "title": "Saan läbi Serial Monitor konsooli lülitada valgust sisse-välja. - Ül 6",
    "image": "tinkercad/ul6.png",
    "tinkercad_link": "https://www.tinkercad.com/things/2KeYvEreRqC/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=dazWFEN6ysW405_TvDfg-9FGbpQ-htJfM6O_VbYQ5ck",
    "code": "int ledPin = 13;\nString inputString = \"\";\n\nvoid setup() {\n    pinMode(ledPin, OUTPUT);\n    Serial.begin(9600);\n    Serial.println(\"Sisesta 'on' voi 'off' ja vajuta Enter:\");\n}\n\nvoid loop() {\n    if (Serial.available()) {\n        inputString = Serial.readStringUntil('\n');\n        inputString.trim();\n\n        if (inputString.equalsIgnoreCase(\"on\")) {\n            digitalWrite(ledPin, HIGH);\n            Serial.println(\"LED on sisse lulitatud.\");\n        }\n        else if (inputString.equalsIgnoreCase(\"off\")) {\n            digitalWrite(ledPin, LOW);\n            Serial.println(\"LED on valja lulitatud.\");\n        }\n        else {\n            Serial.println(\"Tundmatu kask. Kasuta 'on' voi 'off'.\");\n        }\n    }\n}"
    },
    {
    "title": "LED’id kuvavad helitugevust (1 led nõrk->3 led’i vali) - Ül 5",
    "image": "tinkercad/ul5.png",
    "tinkercad_link": "https://www.tinkercad.com/things/jnXdyXi0Ps5/editel?returnTo=%2Fdashboard%2Fdesigns%2F3d&sharecode=lXZ0vZynM6MNsDSO8XxUptnGj5SmS1NLVrZIdxh9ObI",
    "code": "int micPin = A0;\nint led1 = 2;\nint led2 = 3;\nint led3 = 4;\n\nvoid setup() {\n    pinMode(led1, OUTPUT);\n    pinMode(led2, OUTPUT);\n    pinMode(led3, OUTPUT);\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    int micValue = analogRead(micPin);\n    Serial.println(micValue);\n\n    if (micValue < 200) {\n        digitalWrite(led1, HIGH);\n        digitalWrite(led2, LOW);\n        digitalWrite(led3, LOW);\n    } else if (micValue < 400) {\n        digitalWrite(led1, HIGH);\n        digitalWrite(led2, HIGH);\n        digitalWrite(led3, LOW);\n    } else {\n        digitalWrite(led1, HIGH);\n        digitalWrite(led2, HIGH);\n        digitalWrite(led3, HIGH);\n    }\n\n    delay(100);\n}"
    },
    {
    "title": "Tuled süttivad, kui läheb pimedaks. Väljasta Serial Monitorile tekst, kas on pime või valge - Ül 4",
    "image": "tinkercad/ul4.png",
    "tinkercad_link": "https://www.tinkercad.com/things/3RGDcWF3MS8-tuled-suttivad-kui-laheb-pimedaks-valjasta-serial-monitorile/editel?returnTo=https%3A%2F%2Fwww.tinkercad.com%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=Dg3XABZFEg0HGX379xW32GCxsoiaExvefy4YEVdFR04",
    "code": "int ldrPin = A0;\nint ledPin = 2;\nint threshold = 500;\n\nvoid setup() {\n    pinMode(ledPin, OUTPUT);\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    int ldrValue = analogRead(ldrPin);\n    Serial.print(\"LDR vaartus: \");\n    Serial.println(ldrValue);\n    Serial.println(analogRead(ldrPin));\n\n    delay(500);\n}"
    },
    {
    "title": "LCD ekraanil kuvatakse mootori kiirus või suund. - Ül 16",
    "image": "tinkercad/ul16.png",
    "tinkercad_link": "https://www.tinkercad.com/things/bTOxi9SWmvo/editel?sharecode=txuT1oyf5OYp95c5Fo0-vm6g1NwLk92KH6Eqwm1sBR8",
    "code": "#include <LiquidCrystal.h>\nconst int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;\nLiquidCrystal lcd(rs, en, d4, d5, d6, d7);\nconst int dir1Pin = 10;\nconst int dir2Pin = 9;\nconst int enablePin = 6;\nconst int butPin1 = 7;\nconst int butPin2 = 8;\nint cauntA = 0;\nint cauntB = 0;\nbool aFlag = false;\nbool bFlag = false;\nint mapVal = 0;\nconst int fromLow = 0;\nconst int fromHigh = 255;\nconst int toLow = 0;\nconst int toHigh = 16530;\n\nvoid setup() {\n  pinMode(dir1Pin, OUTPUT);\n  pinMode(dir2Pin, OUTPUT);\n  pinMode(enablePin, OUTPUT);\n  pinMode(butPin1, INPUT_PULLUP);\n  pinMode(butPin2, INPUT_PULLUP);\n  lcd.begin(16, 2);\n  lcd.print(\"DC Motor RPM +/-\");\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  if (cauntA == 0 && cauntB == 0) {\n    aFlag = false;\n    bFlag = false;\n  }\n  while (aFlag == false && bFlag == false) {\n    digitalWrite(dir1Pin, LOW);\n    digitalWrite(dir2Pin, LOW);\n    analogWrite(enablePin, 0);\n    if (digitalRead(butPin1) == LOW) {\n      aFlag = true;\n      cauntA += 5;\n      if (cauntA > 255) cauntA = 255;\n      digitalWrite(dir1Pin, HIGH);\n      digitalWrite(dir2Pin, LOW);\n      analogWrite(enablePin, cauntA);\n      mapVal = map(cauntA, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: \");\n      lcd.print(mapVal);\n      lcd.print(\"     \");\n      while (digitalRead(butPin1) == LOW);\n    }\n    if (digitalRead(butPin2) == LOW) {\n      bFlag = true;\n      cauntB += 5;\n      if (cauntB > 255) cauntB = 255;\n      digitalWrite(dir1Pin, LOW);\n      digitalWrite(dir2Pin, HIGH);\n      analogWrite(enablePin, cauntB);\n      mapVal = map(cauntB, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: -\");\n      lcd.print(mapVal);\n      lcd.print(\"    \");\n      while (digitalRead(butPin2) == LOW);\n    }\n  }\n  if (aFlag == true) {\n    while (digitalRead(butPin1) == HIGH && digitalRead(butPin2) == HIGH);\n    if (digitalRead(butPin1) == LOW) {\n      cauntA += 5;\n      if (cauntA > 255) cauntA = 255;\n      digitalWrite(dir1Pin, HIGH);\n      digitalWrite(dir2Pin, LOW);\n      analogWrite(enablePin, cauntA);\n      mapVal = map(cauntA, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: \");\n      lcd.print(mapVal);\n      lcd.print(\"     \");\n      while (digitalRead(butPin1) == LOW);\n    }\n    if (digitalRead(butPin2) == LOW) {\n      cauntA -= 5;\n      if (cauntA < 0) cauntA = 0;\n      digitalWrite(dir1Pin, HIGH);\n      digitalWrite(dir2Pin, LOW);\n      analogWrite(enablePin, cauntA);\n      lcd.clear();\n      lcd.print(\"DC Motor RPM +/-\");\n      mapVal = map(cauntA, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: \");\n      lcd.print(mapVal);\n      lcd.print(\"     \");\n      while (digitalRead(butPin2) == LOW);\n      if (cauntA == 0) {\n        aFlag = false;\n      }\n    }\n  }\n  if (bFlag == true) {\n    while (digitalRead(butPin1) == HIGH && digitalRead(butPin2) == HIGH);\n    if (digitalRead(butPin2) == LOW) {\n      cauntB += 5;\n      if (cauntB > 255) cauntB = 255;\n      digitalWrite(dir1Pin, LOW);\n      digitalWrite(dir2Pin, HIGH);\n      analogWrite(enablePin, cauntB);\n      mapVal = map(cauntB, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: -\");\n      lcd.print(mapVal);\n      lcd.print(\"     \");\n      while (digitalRead(butPin2) == LOW);\n    }\n    if (digitalRead(butPin1) == LOW) {\n      cauntB -= 5;\n      if (cauntB < 0) cauntB = 0;\n      digitalWrite(dir1Pin, LOW);\n      digitalWrite(dir2Pin, HIGH);\n      analogWrite(enablePin, cauntB);\n      lcd.clear();\n      lcd.print(\"DC Motor RPM +/-\");\n      mapVal = map(cauntB, fromLow, fromHigh, toLow, toHigh);\n      lcd.setCursor(0, 1);\n      lcd.print(\"RPM: -\");\n      lcd.print(mapVal);\n      lcd.print(\"     \");\n      while (digitalRead(butPin1) == LOW);\n      if (cauntB == 0) {\n        bFlag = false;\n      }\n    }\n  }\n}"
    },
    {
    "title": "Arduino mängib laulu “Super Mario” ja vilgutab tulesid. Kuva info ka Serial Monitoris. - Ül 15",
    "image": "tinkercad/ul15.png",
    "tinkercad_link": "https://www.tinkercad.com/things/24nCqbg4qLO/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=rrvXvX_blFTm2qiiZKFddLU3K_9-cGitmTEPrdV5I6I",
    "code": "// --- Notes definition ---\n#define NOTE_B0  31\n#define NOTE_C1  33\n#define NOTE_CS1 35\n#define NOTE_D1  37\n#define NOTE_DS1 39\n#define NOTE_E1  41\n#define NOTE_F1  44\n#define NOTE_FS1 46\n#define NOTE_G1  49\n#define NOTE_GS1 52\n#define NOTE_A1  55\n#define NOTE_AS1 58\n#define NOTE_B1  62\n#define NOTE_C2  65\n#define NOTE_CS2 69\n#define NOTE_D2  73\n#define NOTE_DS2 78\n#define NOTE_E2  82\n#define NOTE_F2  87\n#define NOTE_FS2 93\n#define NOTE_G2  98\n#define NOTE_GS2 104\n#define NOTE_A2  110\n#define NOTE_AS2 117\n#define NOTE_B2  123\n#define NOTE_C3  131\n#define NOTE_CS3 139\n#define NOTE_D3  147\n#define NOTE_DS3 156\n#define NOTE_E3  165\n#define NOTE_F3  175\n#define NOTE_FS3 185\n#define NOTE_G3  196\n#define NOTE_GS3 208\n#define NOTE_A3  220\n#define NOTE_AS3 233\n#define NOTE_B3  247\n#define NOTE_C4  262\n#define NOTE_CS4 277\n#define NOTE_D4  294\n#define NOTE_DS4 311\n#define NOTE_E4  330\n#define NOTE_F4  349\n#define NOTE_FS4 370\n#define NOTE_G4  392\n#define NOTE_GS4 415\n#define NOTE_A4  440\n#define NOTE_AS4 466\n#define NOTE_B4  494\n#define NOTE_C5  523\n#define NOTE_CS5 554\n#define NOTE_D5  587\n#define NOTE_DS5 622\n#define NOTE_E5  659\n#define NOTE_F5  698\n#define NOTE_FS5 740\n#define NOTE_G5  784\n#define NOTE_GS5 831\n#define NOTE_A5  880\n#define NOTE_AS5 932\n#define NOTE_B5  988\n#define NOTE_C6  1047\n#define NOTE_CS6 1109\n#define NOTE_D6  1175\n#define NOTE_DS6 1245\n#define NOTE_E6  1319\n#define NOTE_F6  1397\n#define NOTE_FS6 1480\n#define NOTE_G6  1568\n#define NOTE_GS6 1661\n#define NOTE_A6  1760\n#define NOTE_AS6 1865\n#define NOTE_B6  1976\n#define NOTE_C7  2093\n#define NOTE_CS7 2217\n#define NOTE_D7  2349\n#define NOTE_DS7 2489\n#define NOTE_E7  2637\n#define NOTE_F7  2794\n#define NOTE_FS7 2960\n#define NOTE_G7  3136\n#define NOTE_GS7 3322\n#define NOTE_A7  3520\n#define NOTE_AS7 3729\n#define NOTE_B7  3951\n#define NOTE_C8  4186\n#define NOTE_CS8 4435\n#define NOTE_D8  4699\n#define NOTE_DS8 4978\n\n#define melodyPin 3\n\n// Mario Theme Melody\nint melody[] = {\nNOTE_E7, NOTE_E7, 0, NOTE_E7,\n0, NOTE_C7, NOTE_E7, 0,\nNOTE_G7, 0, 0, 0,\nNOTE_G6, 0, 0, 0,\n\nNOTE_C7, 0, 0, NOTE_G6,\n0, 0, NOTE_E6, 0,\n0, NOTE_A6, 0, NOTE_B6,\n0, NOTE_AS6, NOTE_A6, 0,\n\nNOTE_G6, NOTE_E7, NOTE_G7,\nNOTE_A7, 0, NOTE_F7, NOTE_G7,\n0, NOTE_E7, 0, NOTE_C7,\nNOTE_D7, NOTE_B6, 0, 0,\n\nNOTE_C7, 0, 0, NOTE_G6,\n0, 0, NOTE_E6, 0,\n0, NOTE_A6, 0, NOTE_B6,\n0, NOTE_AS6, NOTE_A6, 0,\n\nNOTE_G6, NOTE_E7, NOTE_G7,\nNOTE_A7, 0, NOTE_F7, NOTE_G7,\n0, NOTE_E7, 0, NOTE_C7,\nNOTE_D7, NOTE_B6, 0, 0\n};\n\nint tempo[] = {\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n\n9, 9, 9,\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n\n9, 9, 9,\n12, 12, 12, 12,\n12, 12, 12, 12,\n12, 12, 12, 12,\n};\n\nint underworld_melody[] = {\nNOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4,\nNOTE_AS3, NOTE_AS4, 0, 0,\nNOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4,\nNOTE_AS3, NOTE_AS4, 0, 0,\nNOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4,\nNOTE_DS3, NOTE_DS4, 0, 0,\nNOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4,\nNOTE_DS3, NOTE_DS4, 0, 0,\nNOTE_DS4, NOTE_CS4, NOTE_D4, NOTE_CS4, NOTE_DS4,\nNOTE_DS4, NOTE_GS3, NOTE_G3, NOTE_CS4,\nNOTE_C4, NOTE_FS4, NOTE_F4, NOTE_E3, NOTE_AS4, NOTE_A4,\nNOTE_GS4, NOTE_DS4, NOTE_B3,\nNOTE_AS3, NOTE_A3, NOTE_GS3,\n0, 0, 0\n};\n\nint underworld_tempo[] = {\n12, 12, 12, 12,\n12, 12, 6, 3,\n12, 12, 12, 12,\n12, 12, 6, 3,\n12, 12, 12, 12,\n12, 12, 6, 3,\n12, 12, 12, 12,\n12, 12, 6, 6,\n18, 18, 18, 6, 6,\n6, 6, 6, 6,\n18, 18, 18, 18, 18, 18,\n10, 10, 10,\n10, 10, 10,\n3, 3, 3\n};\n\nint song = 0;\n\nvoid setup() {\npinMode(melodyPin, OUTPUT);\npinMode(13, OUTPUT); // LED\nSerial.begin(9600);\nSerial.println(\"Super Mario Sound Player Ready!\");\n}\n\nvoid loop() {\nsing(1); // Mario Theme x2\nsing(1);\nsing(2); // Underworld Theme\n}\n\nvoid sing(int s) {\nsong = s;\nif (song == 2) {\nSerial.println(\"Playing: Underworld Theme\");\nint size = sizeof(underworld_melody) / sizeof(int);\nfor (int i = 0; i < size; i++) {\nint note = underworld_melody[i];\nint duration = 1000 / underworld_tempo[i];\nSerial.print(\"Note: \");\nSerial.println(note);\nbuzz(melodyPin, note, duration);\ndelay(duration * 1.30);\nbuzz(melodyPin, 0, duration);\n}\n} else {\nSerial.println(\"Playing: Mario Theme\");\nint size = sizeof(melody) / sizeof(int);\nfor (int i = 0; i < size; i++) {\nint note = melody[i];\nint duration = 1000 / tempo[i];\nSerial.print(\"Note: \");\nSerial.println(note);\nbuzz(melodyPin, note, duration);\ndelay(duration * 1.30);\nbuzz(melodyPin, 0, duration);\n}\n}\n}\n\nvoid buzz(int targetPin, long frequency, long length) {\nif (frequency == 0) {\ndelay(length);\nreturn;\n}\n\ndigitalWrite(13, HIGH);\nlong delayValue = 1000000 / frequency / 2;\nlong numCycles = frequency * length / 1000;\nfor (long i = 0; i < numCycles; i++) {\ndigitalWrite(targetPin, HIGH);\ndelayMicroseconds(delayValue);\ndigitalWrite(targetPin, LOW);\ndelayMicroseconds(delayValue);\n}\ndigitalWrite(13, LOW);\n}"
    },
    {
    "title": "Kontrolli potentsiomeetri abiga LED vilkumise kiirust. Kuva info ka Serial Monitoris. - Ül 14",
    "image": "tinkercad/ul14.png",
    "tinkercad_link": "https://www.tinkercad.com/things/lzGnNSbROYK/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=FkcVl71fTM3qPCfxm3mFBtEGq3yrAb6oQZxZ9EPazic",
    "code": "int ledPin = 13;\nString inputString = \"\";\n\nvoid setup() {\n    pinMode(ledPin, OUTPUT);\n    Serial.begin(9600);\n    Serial.println(\"Sisesta 'on' voi 'off' ja vajuta Enter:\");\n}\n\nvoid loop() {\n    if (Serial.available()) {\n        inputString = Serial.readStringUntil('\n');\n        inputString.trim();\n\n        if (inputString.equalsIgnoreCase(\"on\")) {\n            digitalWrite(ledPin, HIGH);\n            Serial.println(\"LED on sisse lulitatud.\");\n        }\n        else if (inputString.equalsIgnoreCase(\"off\")) {\n            digitalWrite(ledPin, LOW);\n            Serial.println(\"LED on valja lulitatud.\");\n        }\n        else {\n            Serial.println(\"Tundmatu kask. Kasuta 'on' voi 'off'.\");\n        }\n    }\n}"
    },
    {
    "title": "Läbi võrgu mõjutad vähemalt kahte erinevat LED. - Ül 26",
    "subtitle": "Tinkercad:",
    "image": "tinkercad/ul26.png",
    "tinkercad_link": "https://www.tinkercad.com/things/emx0ftlwXd7/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=K4fKAz6d_ktyyfLuFCIibaTeVxuLIapddiwL1tcXmAI",
    "code": "#include <ESP8266WiFi.h>  // Kui kasutad ESP8266\n//#include <WiFi.h>          // Kui kasutad ESP32\n#include <ESP8266WebServer.h> // Kui kasutad ESP8266\n//#include <WebServer.h>      // Kui kasutad ESP32\n\nconst char* ssid = \"your_SSID\";       // Wi-Fi nimi\nconst char* password = \"your_PASSWORD\"; // Wi-Fi parool\n\nESP8266WebServer server(80);  // Serveri loomine ESP8266 jaoks (või ESP32 puhul WebServer)\n\nconst int ledPin1 = D1;  // LED1 jaoks pin\nconst int ledPin2 = D2;  // LED2 jaoks pin\n\nvoid setup() {\n  // Alustame seeriaväljastust ja Wi-Fi ühendust\n  Serial.begin(115200);\n  WiFi.begin(ssid, password);\n\n  // Ootame, kuni Wi-Fi ühendus on loodud\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(1000);\n    Serial.println(\"Ühendatakse Wi-Fi-ga...\");\n  }\n\n  Serial.println(\"Ühendus loodud!\");\n  Serial.print(\"IP aadress: \");\n  Serial.println(WiFi.localIP());\n\n  // LEDide pin'ide seadistamine\n  pinMode(ledPin1, OUTPUT);\n  pinMode(ledPin2, OUTPUT);\n\n  // Defineerime veebiserveri lingid\n  server.on(\"/\", HTTP_GET, []() {\n    String html = \"<html><body><h1>LED Kontroll</h1>\";\n    html += \"<p><a href=\\\"/led1/on\\\">LED1 ON</a></p>\";\n    html += \"<p><a href=\\\"/led1/off\\\">LED1 OFF</a></p>\";\n    html += \"<p><a href=\\\"/led2/on\\\">LED2 ON</a></p>\";\n    html += \"<p><a href=\\\"/led2/off\\\">LED2 OFF</a></p>\";\n    html += \"</body></html>\";\n    server.send(200, \"text/html\", html);\n  });\n\n  server.on(\"/led1/on\", HTTP_GET, []() {\n    digitalWrite(ledPin1, HIGH);\n    server.sendHeader(\"Location\", \"/\");\n    server.send(303);\n  });\n\n  server.on(\"/led1/off\", HTTP_GET, []() {\n    digitalWrite(ledPin1, LOW);\n    server.sendHeader(\"Location\", \"/\");\n    server.send(303);\n  });\n\n  server.on(\"/led2/on\", HTTP_GET, []() {\n    digitalWrite(ledPin2, HIGH);\n    server.sendHeader(\"Location\", \"/\");\n    server.send(303);\n  });\n\n  server.on(\"/led2/off\", HTTP_GET, []() {\n    digitalWrite(ledPin2, LOW);\n    server.sendHeader(\"Location\", \"/\");\n    server.send(303);\n  });\n  server.begin();\n}\n\nvoid loop() {\n  server.handleClient(); \n}"
    },
    {
    "title": "Arduino mõõdab veetaset ja annab märku LED abil. Kuva info ka Serial Monitoris. - Ül 25",
    "subtitle": "Tinkercad:",
    "image": "tinkercad/ul25.png",
    "tinkercad_link": "https://www.tinkercad.com/things/cMUvXErmPPH/editel?returnTo=%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=buwKw_wFMGgM_phjiPyWilHEQRFY6kNzPhDWrrp9GbI",
    "code": "int sensorPin = A0;       // Veetasemeandur (potentsiomeeter)\nint ledPin = 8;           // LED pin\nint waterLevel = 0;       // Muutuja anduri väärtuseks\nint threshold = 500;      // Lävi, millest alates LED süttib\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(ledPin, OUTPUT);\n  Serial.println(\"Veetaseme jälgimine alustatud...\");\n}\n\nvoid loop() {\n  waterLevel = analogRead(sensorPin); // Loe veetaseme väärtus\n  Serial.print(\"Veetase: \");\n  Serial.println(waterLevel);\n\n  if (waterLevel > threshold) {\n    digitalWrite(ledPin, HIGH); // LED põlema\n    Serial.println(\"TASE KÕRGE – LED sees\");\n  } else {\n    digitalWrite(ledPin, LOW); // LED kustus\n    Serial.println(\"TASE MADAL – LED väljas\");\n  }\n\n  delay(1000); // Oota 1 sekund\n}"
    },
    {
    "title": "Tutvu lasermooduliga ja pane see tööle, et see teeks midagi (NB! laser kahjustab silma). Kuva info ka Serial Monitoris. - Ül 24",
    "subtitle": "Tinkercad:",
    "image": "Pole",
    "code": "int laserPin = 8; // Laser IN ühendatud D8 külge\n\nvoid setup() {\n  Serial.begin(9600);       // Käivita Serial Monitor\n  pinMode(laserPin, OUTPUT);\n  Serial.println(\"Laser moodul testimiseks valmis.\");\n}\n\nvoid loop() {\n  digitalWrite(laserPin, HIGH); // Lülita laser sisse\n  Serial.println(\"Laser sees!\");\n  delay(2000);                  // Hoia sees 2 sekundit\n\n  digitalWrite(laserPin, LOW);  // Lülita laser välja\n  Serial.println(\"Laser väljas!\");\n  delay(2000);                  // Hoia väljas 2 sekundit\n}"
    }
]
